<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:dubbo="http://code.alibabatech.com/schema/dubbo"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://code.alibabatech.com/schema/dubbo/dubbo.xsd ">

    <!--配置dubbo接口所属的应用名称、所有者、组织、日志类型、运行环境
        name：
        owner：
        organization：
        logger：
        environment：
      -->
    <dubbo:application name="${dubbo.application.name}" owner="${dubbo.application.owner}" organization="" logger="" environment=""/>

    <!--定义服务使用的rpc协议，服务的端口号，是否开启日志
        id:
        name:
        port:
        accesslog:
      -->
    <dubbo:protocol id="default" name="${dubbo.protocol.name}" port="${dubbo.protocol.port}" accesslog="false"/>


    <!--配置zookeeper的地址暴露服务
        protocal:注册的协议
        address:注册服务的地址
        check:
        egister:是否注册
      -->
    <dubbo:registry protocol="zookeeper" address="zookeeper://115.28.189.59:2181" check="false" register="true"/>

    <!--定义具体的bean
        id:对应于service标签中ref的指
        class:对应实现接口的具体类
      -->
    <bean id="dubboserviceapi" class="learndemo.dubboservice.dubboServiceAPIImpl"/>

    <!--定义服务的提供者
        delay:
        group:定义服务提供的所在的组
        version:定义接口的版本
        cluster:所在的集群
        timeout:
        filter:定义请求和返回的过滤器
        dispatcher:
      -->
    <dubbo:provider delay="-1" group="${dubbo.provider.group}" version="1.0" cluster="fastfail" timeout="5000" filter="-monitor" dispatcher="all" />

    <!--定义具体的服务
        interface：服务对应的接口
        ref：接口参照的具体实现，对应bean中的id
      -->
    <dubbo:service interface="DubboAPI.dubboServiceAPI" ref="dubboserviceapi" />

</beans>